name: template-ci-pipeline

on:
  workflow_call:
    inputs:
      dotnet-version:
        description: 'dotnet version to install'
        required: false
        type: string
        default: '6.0.x'
      dotnet-prerelease:
        required: false
        type: boolean
        default: false
      publish-coverage:
        required: false
        type: boolean
        default: false
      deploy-package:
        required: false
        type: boolean
        default: false
      deploy-condition:
        required: false
        type: string
      package-name:
        required: false
        type: string
      check-eslint:
        description: 'path to script folder if you want to check ES6 compliant'
        required: false
        type: string
      working-directory:
        required: false
        type: string
        default: './src'
      publish-directory:
        required: false
        type: string
        default: './'
    secrets:
      code-cov-token:
        required: false

jobs:
  ci:
    name: Build & Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install eslint
        if: ${{ inputs.check-eslint != null }}
        run: npm i -g eslint

      - name: Check JS is ES6 compliant
        if: ${{ inputs.check-eslint != null }}
        run: eslint --env 'es6' ${{ inputs.check-eslint }}

      - name: Setup dotnet version
        uses: actions/setup-dotnet@v1
        with: 
          dotnet-version: ${{ inputs.dotnet-version }}
          include-prerelease: ${{ inputs.dotnet-prerelease }}

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build -c Release --no-restore /nowarn:CS1591,CS0114

      - name: Test
        run: dotnet test -c Release --no-build --no-restore --blame-hang --blame-hang-timeout 60s /property:GenerateFullPaths=true /consoleloggerparameters:NoSummary /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:ExcludeByAttribute='ExcludeFromCodeCoverage' /p:Include='[PyrotechBlazor]*' /p:SkipAutoProps=true /p:CoverletOutput='./TestResults/'

      - name: Coverage
        if: ${{ inputs.publish-coverage == true }}
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.code-cov-token }}
          file: coverage.cobertura.xml
